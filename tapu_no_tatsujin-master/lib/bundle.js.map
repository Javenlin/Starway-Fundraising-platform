{"version":3,"sources":["webpack:///webpack/bootstrap 09f07082d22d83119d04","webpack:///./lib/tap.js","webpack:///./lib/entry.js","webpack:///./lib/view.js","webpack:///./lib/game.js","webpack:///./lib/sounds.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;ACvIA;AAAA;AACA;AACA;AACA;AACoD;;AAEpD;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,WAAW;;AAEX,CAAC,EAAE;;;;;;;;AC1DH;AAAA;AACoC;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN,uCAAuC;AACvC,yCAAyC;AACzC,wCAAwC;;AAExC;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;ACpCA;AAAA;;AAEyD;AAEX;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,8BAA8B,gCAAgC;AAC9D,OAAO;;AAEP;AACA;AACA,0BAA0B,qCAAqC;AAC/D,OAAO;;AAEP;AACA;AACA,0BAA0B,sCAAsC;AAChE,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO,EAAE;;AAET;AACA;AACA;AACA,MAAM;AACN,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,CAAC;;AAED;;;;;;;;AC7WA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 09f07082d22d83119d04","/* global createjs */\n\nexport const startMessages = () => {\n  let chooseLevel = new createjs.Text(\"Choose a level\", \"40px Luckiest Guy\", \"#000000\");\n  let beginPlay = new createjs.Text(\"to begin playing\", \"40px Luckiest Guy\", \"#000000\");\n  chooseLevel.x = 50;\n  chooseLevel.y = 250;\n  beginPlay.x = 40;\n  beginPlay.y = 325;\n  chooseLevel.outline = 5;\n  beginPlay.outline = 5;\n  let chooseLevelFill = chooseLevel.clone();\n  chooseLevelFill.outline = false;\n  chooseLevelFill.color = \"red\";\n  let beginPlayFill = beginPlay.clone();\n  beginPlayFill.outline = false;\n  beginPlayFill.color = \"red\";\n  return (\n    [chooseLevel, beginPlay, chooseLevelFill, beginPlayFill]\n  );\n};\n\nexport const TaikoRed = (x=175, y= 525) => {\n  let tapRed = new createjs.Bitmap(\"./assets/images/taiko_red.png\");\n  tapRed.x = x;\n  tapRed.y = y;\n  tapRed.scaleX = tapRed.scaleY = 0.5;\n  return (\n    tapRed\n  );\n};\n\nexport const TaikoBlue = (x=55, y=525) => {\n  let tapBlue = new createjs.Bitmap(\"./assets/images/taiko_blue.png\");\n  tapBlue.x = x;\n  tapBlue.y = y;\n  tapBlue.scaleX = tapBlue.scaleY = 0.5;\n  return (\n    tapBlue\n  );\n};\n\nexport const TaikoGold = (x=45, y=515) => {\n  let tapGold = new createjs.Bitmap(\"./assets/images/taiko_gold.png\");\n  tapGold.x = x;\n  tapGold.y = y;\n  tapGold.scaleX = tapGold.scaleY = 0.7;\n  return (\n    tapGold\n  );\n};\n\nexport const TaikoBlack = (x=35) => {\n  let tapBlack = new createjs.Bitmap(\"./assets/images/taiko_black.png\");\n  tapBlack.x = x;\n  tapBlack.y = 505;\n  tapBlack.scaleX = tapBlack.scaleY = 0.5;\n  return (\n    tapBlack\n  );\n};\n\nexport const Fireworks = (x=260, y=490) => {\n  let fireworks = new createjs.Bitmap(\"./assets/images/fireworks.png\");\n  fireworks.x = x;\n  fireworks.y = y;\n  fireworks.scaleX = fireworks.scaleY = 1.2;\n  return (\n    fireworks\n  );\n};\n\nexport const FireworkGradients = (x=260, y=490) => {\n  let fireworks = new createjs.Bitmap(\"./assets/images/fireworks_gradient.png\");\n  fireworks.x = x;\n  fireworks.y = y;\n  fireworks.scaleX = fireworks.scaleY = 1.2;\n  return (\n    fireworks\n  );\n};\n\nexport const hitMessages = (x, y) => {\n  const messageContainer = [\"Great!\", \"Fantastic!\", \"Amazing!\",\n      \"Good!\", \"Perfect!\", \"Hit!\"];\n  let messages = messageContainer[Math.floor( Math.random()\n      * messageContainer.length)];\n  let text = new createjs.Text();\n  text.font = \"20px Luckiest Guy\";\n  text.color = \"white\";\n  text.text = messages;\n  text.outline = 5;\n  text.x = Math.floor(Math.random() * (y - x))+ x;\n  text.y = Math.floor(Math.random() * (500-435)) + 435;\n  let textFill = text.clone();\n  textFill.outline = false;\n  textFill.color = \"red\";\n  return (\n    [text, textFill]\n  );\n};\n\nexport const missMessages = (x, y) => {\n  const messageContainer = [\"Missed!\", \"Not Even Close!\",\n      \"Try Again!\"];\n  let messages = messageContainer[Math.floor( Math.random()\n      * messageContainer.length)];\n  let text = new createjs.Text();\n  text.font = \"20px Luckiest Guy\";\n  text.color = \"white\";\n  text.text = messages;\n  text.outline = 4;\n  text.x = Math.floor(Math.random() * (y - x))+ x;\n  text.y = Math.floor(Math.random() * (500-435)) + 435;\n  let textFill = text.clone();\n  textFill.outline = false;\n  textFill.color = \"blue\";\n  return (\n    [text, textFill]\n  );\n};\n\nexport const showScore = (score) => {\n  let gameOver = new createjs.Text(\"Game Over\", \"45px Luckiest Guy\", \"white\");\n    gameOver.x = 75;\n    gameOver.y = 200;\n  let yourScore = new createjs.Text(\"You score is\", \"45px Luckiest Guy\", \"white\");\n    yourScore.x = 65;\n    yourScore.y = 255;\n  let finalScore = new createjs.Text(score, \"50px Luckiest Guy\", \"white\");\n    finalScore.x = 140;\n    finalScore.y = 310;\n    return (\n      [gameOver, yourScore, finalScore]\n    );\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tap.js\n// module id = 0\n// module chunks = 0","/* global createjs */\nimport View from './view';\nimport Game from './game';\n//test\nimport { TaikoRed, TaikoBlue, TaikoGold, Fireworks,} from './tap';\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvas = document.getElementById('gameCanvas');\n  const stage = new createjs.Stage(canvas); //similar to getElementById\n  const view = new View(stage);\n  const game = new Game(stage);\n\n  view.render();\n  stage.update();\n\n  function controlKeys (e) {\n    e.preventDefault();\n    switch (e.keyCode){\n      case 66:\n        game.tapRed();\n        break;\n      case 67:\n        game.tapBlueLeft();\n        break;\n      case 77:\n        game.tapBlueRight();\n        break;\n    }\n  } // end controlKeys\n\n  document.addEventListener(\"keydown\", controlKeys, false);\n\n  document.getElementById(\"level-beginner\")\n          .addEventListener(\"click\", () => {\n            game.play(\"beginner\");\n          });\n\n  document.getElementById(\"level-normal\")\n          .addEventListener(\"click\", () => {\n            game.play(\"normal\");\n          });\n\n  document.getElementById(\"level-master\")\n          .addEventListener(\"click\", () => {\n            game.play(\"master\");\n          });\n\n  document.getElementById(\"stop\")\n          .addEventListener(\"click\", () => {\n            game.stop();\n          });\n\n  document.getElementById(\"reset\")\n          .addEventListener(\"click\", () => {\n            game.stop();\n            game.reset();\n          });\n\n}); // end AddeventListener\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 1\n// module chunks = 0","/* global createjs */\nimport { TaikoBlack, startMessages } from './tap';\n\nclass View {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  start() {\n  let [chooseLevel, beginPlay, chooseLevelFill, beginPlayFill] = startMessages();\n  this.stage.addChild(chooseLevel, beginPlay, chooseLevelFill, beginPlayFill);\n  this.stage.update;\n  document.addEventListener(\"click\", () => {\n    this.stage.removeChild(chooseLevel, beginPlay, chooseLevelFill, beginPlayFill);\n  });\n}\n\n  render () {\n    const taikoBlackLeft = TaikoBlack();\n    const taikoBlackMid = TaikoBlack(155);\n    const taikoBlackRight = TaikoBlack(275);\n\n    this.start();\n    let stage = this.stage;\n    taikoBlackMid.image.onload = function() {\n      stage.update();\n    }; // image won't load unless you call this onload function\n\n    this.stage.addChild(taikoBlackMid); // must call if you want to put something.\n    this.stage.addChild(taikoBlackRight); // must call if you want to put something.\n    this.stage.addChild(taikoBlackLeft); // must call if you want to put something.\n\n    this.stage.update();\n  } //end render\n} //end class viewPort\n\nexport default View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/view.js\n// module id = 2\n// module chunks = 0","/* global createjs */\n\nimport { ConanTheme, WilliamOverture, Don, Ka, Soysauce } from './sounds';\nimport { TaikoBlue, TaikoRed, TaikoGold, FireworkGradients,\n        hitMessages, missMessages, showScore } from './tap';\n\nclass Game {\n  constructor(stage){\n    this.stage = stage;\n    this.speed = 100;\n    this.pause = true;\n    this.score = 0;\n    this.combo = 0;\n    this.level = null;\n    this.onGame = false;\n    this.missed = 40;\n    this.currentRowLeft = [];\n    this.currentRowMid = [];\n    this.currentRowRight = [];\n\n    this.bgm;\n    this.redInt;\n    this.blueIntLeft;\n    this.blueIntRight;\n\n    //animation frame rate\n    createjs.Ticker.setFPS(30);\n\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.music = this.music.bind(this);\n    this.reset = this.reset.bind(this);\n    this.tapRed = this.tapRed.bind(this);\n    this.myScore = this.myScore.bind(this);\n    this.removeTap = this.removeTap.bind(this);\n    this.checkGame = this.checkGame.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n    this.missMessage = this.missMessage.bind(this);\n    this.tapBlueLeft = this.tapBlueLeft.bind(this);\n    this.tapBlueRight = this.tapBlueRight.bind(this);\n    this.createRedTaps = this.createRedTaps.bind(this);\n    this.createInterval = this.createInterval.bind(this);\n    this.createBlueLeftTaps = this.createBlueLeftTaps.bind(this);\n    this.createBlueRightTaps = this.createBlueRightTaps.bind(this);\n  } //end constructor\n\n  play(difficulties){\n    this.reset();\n    let max = 1000;\n    let min = 900;\n\n    if (this.checkGame(difficulties)) {\n      if (difficulties === \"beginner\") {\n        this.level = \"beginner\";\n        this.speed = 120;\n        this.onGame = true;\n        this.music(ConanTheme());\n        max = 1800;\n        min = 900;\n      } else if (difficulties === \"normal\"){\n        this.level = \"normal\";\n        this.speed = 180;\n        this.onGame = true;\n        this.music(WilliamOverture());\n        max = 1100;\n        min = 700;\n      } else if (difficulties === \"master\") {\n        this.level = \"master\";\n        this.speed = 250;\n        this.onGame = true;\n        this.music(Soysauce());\n        max = 1000;\n        min = 500;\n      } // end if\n\n      this.redInt = setInterval( function() {\n        let intervalOne = this.createInterval(max, min);\n        setTimeout(function(){this.createRedTaps(this.speed);}.bind(this), intervalOne);\n      }.bind(this), 800 );\n\n      this.blueIntLeft = setInterval( function(){\n        let intervalTwo = this.createInterval(max, min);\n        setTimeout(() => {this.createBlueLeftTaps(this.speed);}, intervalTwo);\n      }.bind(this), 1200 );\n\n      this.blueIntRight = setInterval( function(){\n        let intervalThree = this.createInterval(max, min);\n        setTimeout(() => {this.createBlueRightTaps(this.speed);}, intervalThree);\n      }.bind(this), 1500 );\n    }// end if checkLevel\n  } // end play\n\n  checkGame(level){\n    if (this.onGame === true ) {\n      return false;\n    } else if (this.level === null) {\n      return true;\n    } else if (this.onGame === false && this.level !== level) {\n      this.level = level;\n      return true;\n    }  else {\n      return true;\n    }\n  }\n\n  music(bgm){\n    this.bgm = bgm;\n    bgm.volume = 0.2;\n    if (this.pause === false){\n      bgm.pause();\n    } else {\n      bgm.play();\n      this.pause = false;\n    }\n\n    const volumeControl = document.getElementById(\"volume\");\n    volumeControl.addEventListener(\"mousemove\", setVolume);\n\n    function setVolume(){\n      bgm.volume = volumeControl.value * 0.01;\n    } // end setVolume\n    const muteButton = document.getElementById(\"info-music-mute-button\")\n      .addEventListener(\"click\", () => {\n        if (this.pause === true) {\n          bgm.play();\n          this.pause = false;\n        } else {\n          bgm.pause();\n          this.pause = true;\n        } //end if\n      }); // end muteButton\n\n      const that = this;\n      this.bgm.addEventListener(\"ended\", function(){\n       that.stop();\n     });\n  } // end music\n\n  createInterval(max=2000, min=500) {\n    let value = Math.round(((Math.random() * (max - min)) + min)/100)* 100;\n    this.interval = value;\n    return this.interval;\n  } // end createInterval\n\n  removeTap(element) {\n    this.stage.removeChild(element[0]);\n    element.shift();\n    this.stage.update();\n  } //end removeTap\n\n  tapRed() {\n    if (this.pause === false) {\n      Don().play();\n      let tapGoldM = TaikoGold(165);\n      this.stage.addChild(tapGoldM);\n      this.stage.update();\n      setTimeout(() => {\n        this.stage.removeChild(tapGoldM);}, 150);\n      if (this.currentRowMid[0] &&\n          this.currentRowMid[0].y > 505 &&\n          this.currentRowMid[0].y < 545) {\n        this.removeTap(this.currentRowMid);\n        this.hitMessage(130, 200);\n      } else {\n        this.missMessage(130, 200);\n        this.missed -= 1;\n      }\n    } // end if\n  } // end tapRed\n\n  tapBlueLeft() {\n    if (this.pause === false) {\n      Ka().play();\n      let tapGoldL = TaikoGold();\n      this.stage.addChild(tapGoldL);\n      this.stage.update();\n      setTimeout(() => {\n        this.stage.removeChild(tapGoldL);}, 150);\n      if (this.currentRowLeft[0] &&\n          this.currentRowLeft[0].y > 505 &&\n          this.currentRowLeft[0].y < 535) {\n        this.removeTap(this.currentRowLeft);\n        this.hitMessage(5, 60);\n      } else {\n        this.missMessage(5, 60);\n        this.missed -= 1;\n      }\n    } // end if\n  } //tapBlueLeft\n\n  tapBlueRight() {\n    if (this.pause === false) {\n      Ka().play();\n      let tapGoldR = TaikoGold(285);\n      this.stage.addChild(tapGoldR);\n      this.stage.update();\n      setTimeout(() => {\n        this.stage.removeChild(tapGoldR);}, 150);\n      if (this.currentRowRight[0] &&\n          this.currentRowRight[0].y > 505 &&\n          this.currentRowRight[0].y < 535) {\n        this.removeTap(this.currentRowRight);\n        this.hitMessage(250, 300);\n      } else {\n        this.missMessage(250, 300);\n        this.missed -= 1;\n      }\n    } // end if\n  }  // tapBlueRight\n\n  createRedTaps(speed=100){\n      const that = this;\n      let redTap = TaikoRed(175, 0);\n      that.currentRowMid.push(redTap);\n      that.stage.addChild(redTap);\n      createjs.Ticker.on(\"tick\", tick);\n      function tick(e) {\n        redTap.y += e.delta/1000*speed;// move 100 pixels per second (elapsedTimeInMS / 1000msPerSecond * pixelsPerSecond):\n        if (that.currentRowMid.length !== 0 &&\n            that.currentRowMid[0].y > 600){\n          that.removeTap(that.currentRowMid);\n          that.missed -= 1;\n          that.updateScore();\n          if (that.missed < 1) {\n            that.stop();\n            that.myScore();\n          }\n        } else {\n          that.stage.update(e);\n        }\n      }\n    }//end createRedTaps\n\n  createBlueLeftTaps(speed=100){\n      const that = this;\n      let blueLeftTap = TaikoBlue(55, 0);\n      that.currentRowLeft.push(blueLeftTap);\n      that.stage.addChild(blueLeftTap);\n      createjs.Ticker.on(\"tick\", tick);\n      function tick(e){\n        blueLeftTap.y += e.delta/1000*speed;\n        if (that.currentRowLeft.length !== 0 &&\n            that.currentRowLeft[0].y > 600){\n          that.removeTap(that.currentRowLeft);\n          that.missed -= 1;\n          that.updateScore();\n          if (that.missed < 1) {\n            that.stop();\n            that.myScore();\n          }\n        } else {\n          that.stage.update(e);\n        }\n      }\n    }// end createBlueLeftTaps\n\n    createBlueRightTaps(speed=100){\n        const that = this;\n        let blueRightTap = TaikoBlue(295, 0);\n        that.currentRowRight.push(blueRightTap);\n        that.stage.addChild(blueRightTap);\n        createjs.Ticker.on(\"tick\", tick);\n        function tick(e){\n          blueRightTap.y += e.delta/1000*speed;\n          if (that.currentRowRight.length !== 0 &&\n              that.currentRowRight[0].y > 600) {\n            that.removeTap(that.currentRowRight);\n            that.missed -= 1;\n            that.updateScore();\n            if (that.missed < 1) {\n              that.stop();\n              that.myScore();\n            }\n          } else {\n            that.stage.update();\n          }\n        }\n      }//end createBlueRightTaps\n\n    hitMessage(x,y){\n      this.score += 100;\n      this.updateScore();\n      let [text, textFill] = hitMessages(x,y);\n      this.stage.addChild(text, textFill);\n      this.stage.update();\n      setTimeout(() => {\n        this.stage.removeChild(text, textFill);\n        text.clear;\n        textFill.clear;\n      }, 400);\n    } //end hitMessage\n\n    missMessage(x, y) {\n      // this.missed -= 1;\n      if (this.missed < 1) {\n        this.stop();\n        this.myScore();\n      }\n      let [text, textFill] = missMessages(x, y);\n      this.stage.addChild(text, textFill);\n      this.stage.update();\n      setTimeout(() => {\n        this.stage.removeChild(text, textFill);\n        text.clear;\n        textFill.clear;\n      }, 400);\n    }\n\n    stop(){\n      this.updateScore();\n      this.myScore();\n      this.onGame = false;\n      this.currentRowLeft = [];\n      this.currentRowMid = [];\n      this.currentRowRight = [];\n      if (this.bgm) {\n        this.bgm.pause();\n        this.pause = true;\n      }\n      clearInterval(this.redInt);\n      clearInterval(this.blueIntLeft);\n      clearInterval(this.blueIntRight);\n    } // end stop\n\n    reset(){\n      this.clearScore();\n      this.currentRowLeft = [];\n      this.currentRowMid = [];\n      this.currentRowRight = [];\n      this.score = 0;\n      this.missed = 40;\n      this.onGame = false;\n      clearInterval(this.redInt);\n      clearInterval(this.blueIntLeft);\n      clearInterval(this.blueIntRight);\n      if (this.bgm) {\n        this.bgm.pause();\n        this.pause = true;\n      }\n    } // end reset\n\n    updateScore() {\n      let score = document.getElementById(\"my-score\");\n      let miss = document.getElementById(\"my-miss\");\n      score.innerHTML = this.score;\n      miss.innerHTML = this.missed;\n    }\n\n    clearScore(){\n      let score = document.getElementById(\"my-score\");\n      let miss = document.getElementById(\"my-miss\");\n      score.innerHTML = 0;\n      miss.innerHTML = 40;\n    }\n\n    myScore() {\n      let [gameOver, yourScore, finalScore] = showScore(this.score);\n      this.stage.addChild(gameOver, yourScore, finalScore);\n      this.stage.update();\n      document.addEventListener(\"click\", () => {\n        this.stage.removeChild(gameOver, yourScore, finalScore);\n      });\n    }\n} //end Game\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","/* global createjs */\n\nexport const ConanTheme = () => {\n  let conan = new Audio('assets/sounds/conanTheme.mp3');\n  return conan;\n};\n\nexport const WilliamOverture = () => {\n  let william = new Audio('assets/sounds/williamOverture.mp3');\n  return william;\n};\n\nexport const Don = () => {\n  let don = new Audio('assets/sounds/don.mp3');\n  return don;\n};\n\nexport const DonDon = () => {\n  let dondon = new Audio ('assets/sounds/don2.mp3');\n  return dondon;\n};\n\nexport const Ka = () => {\n  let kak = new Audio ('assets/sounds/kak.mp3');\n  return kak;\n};\n\nexport const Soysauce = () => {\n  let soysauce = new Audio ('assets/sounds/soysauce.mp3');\n  return soysauce;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sounds.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}